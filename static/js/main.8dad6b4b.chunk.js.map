{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","stats","title","FeedbackOptions","options","map","option","type","button","name","onClick","App","useState","setGood","setNeutral","setBad","percentageOfgood","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,4B,mBCA5DD,EAAOC,QAAU,CAAC,OAAS,kC,+JC6BZC,MA1Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OAAc,IAAVD,EAEA,sBAAKE,UAAWC,IAAOC,MAAvB,UACE,oBAAIF,UAAWC,IAAOE,MAAtB,yBACA,sCACO,+BAAOR,OAEd,yCACU,+BAAOC,OAEjB,qCACM,+BAAOC,OAEb,uCACQ,+BAAOC,OAEf,mDACoB,iCAAOC,EAAP,aAKjB,oBAAIC,UAAWC,IAAOE,MAAtB,iC,gBCTIC,EAdS,SAAC,GACvB,OADuC,EAAdC,QACVC,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SACLR,UAAWC,IAAOQ,OAElBC,KAAMH,EAAO,GACbI,QAASJ,EAAO,GALlB,SAOGA,GAJIA,EAAO,QC4BHK,EA/BH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBmB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOhB,EAAP,KAAYmB,EAAZ,KAEMlB,EAAQH,EAAOC,EAAUC,EACzBoB,EAAmBC,KAAKC,MAAOxB,EAAOG,EAAS,KAErD,OACE,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,wCACA,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACEK,QAAS,CACP,CAAC,OAAQ,kBAAMS,EAAQnB,EAAO,KAC9B,CAAC,UAAW,kBAAMoB,EAAWnB,EAAU,KACvC,CAAC,MAAO,kBAAMoB,EAAOnB,EAAM,UAIjC,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBkB,QC1B5BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8dad6b4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__MZ6Pg\",\"stats\":\"Statistics_stats__3OpFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3pVlJ\"};","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  if (total !== 0) {\r\n    return (\r\n      <div className={styles.stats}>\r\n        <h2 className={styles.title}>Statistics:</h2>\r\n        <p>\r\n          Good:<span>{good}</span>\r\n        </p>\r\n        <p>\r\n          Neutral:<span>{neutral}</span>\r\n        </p>\r\n        <p>\r\n          Bad:<span>{bad}</span>\r\n        </p>\r\n        <p>\r\n          Total:<span>{total}</span>\r\n        </p>\r\n        <p>\r\n          positive feedback:<span>{positivePercentage}%</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h2 className={styles.title}> No feedback given</h2>;\r\n  }\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  stats: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options }) => {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      className={styles.button}\r\n      key={option[0]}\r\n      name={option[0]}\r\n      onClick={option[1]}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n  button: PropTypes.string,\r\n};\r\n","import './App.css';\r\nimport { useState } from 'react';\r\n// import React, { Component } from 'react';\r\nimport Statistics from './Components/Statistics/Statistics';\r\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions.jsx';\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const total = good + neutral + bad;\r\n  const percentageOfgood = Math.floor((good / total) * 100);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2 className=\"title\">Please leave your feedback</h2>\r\n      <div className=\"btn\">\r\n        <FeedbackOptions\r\n          options={[\r\n            ['good', () => setGood(good + 1)],\r\n            ['neutral', () => setNeutral(neutral + 1)],\r\n            ['bad', () => setBad(bad + 1)],\r\n          ]}\r\n        />\r\n      </div>\r\n      <Statistics\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={total}\r\n        positivePercentage={percentageOfgood}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}